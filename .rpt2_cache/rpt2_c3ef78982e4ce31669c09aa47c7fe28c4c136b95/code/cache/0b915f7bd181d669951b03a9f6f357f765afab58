{"map":"{\"version\":3,\"file\":\"Store.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/Store.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAC,SAAS,EAAC,WAAW,EAAC,MAAM,SAAS,CAAA;AAC7C;IAGI,eAAa,IAAiC;QAAjC,qBAAA,EAAA,qBAAiC;QAC1C,IAAI,CAAC,OAAO,GAAE,MAAM,CAAC,IAAI,CAAC,CAAA;IAC9B,CAAC;IACF,YAAY;IACX,mBAAG,GAAH,UAAK,MAAkB;QACZ,IAAA,eAAQ,EAAR,+BAAQ,EAAC,iBAAe,EAAf,sCAAe,CAAU;QACzC,IAAI,CAAC,GAAG;YAAE,OAAO,IAAI,CAAA;QACrB,IAAG,KAAK,KAAK,SAAS,EAAC;YACnB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;SACtB;QACD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAA;QAC1C,OAAQ,KAAK,CAAA;IACjB,CAAC;IACH,YAAY;IACV,mBAAG,GAAH,UAAK,MAAkB;QACZ,IAAA,eAAQ,EAAR,+BAAQ,CAAU;QACzB,IAAI,CAAC,GAAG;YAAE,OAAO,SAAS,CAAA;QAC1B,IAAI,GAAG,GAAG,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA;QAChD,OAAO,CAAC,GAAG,KAAK,SAAS,IAAI,GAAG,KAAK,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAA,GAAG,CAAC,CAAA;IAC/D,CAAC;IAEH,YAAY;IACV,mBAAG,GAAH,UAAK,MAAkB;QACnB,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,SAAS,CAAA;IACzC,CAAC;IAEH,UAAU;IACR,sBAAM,GAAN,UAAQ,MAAkB;QACf,IAAA,eAAQ,EAAR,+BAAQ,CAAU;QACzB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;IAChC,CAAC;IACJ,YAAY;IACT,qBAAK,GAAL,UAAO,MAAkB;QACrB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;IACxB,CAAC;IACJ,eAAe;IACZ,sBAAM,GAAN,UAAQ,MAAkB;QACtB,IAAI,GAAU,CAAA;QACd,GAAG,GAAG,EAAE,CAAA;QACR,IAAI,CAAC,OAAO,CAAC,UAAC,GAAU,EAAC,GAAO;YAC5B,GAAG,CAAC,GAAG,CAAC,GAAE,GAAG,CAAA;QACjB,CAAC,CAAC,CAAA;QACF,OAAO,GAAG,CAAA;IAEd,CAAC;IACJ,KAAK;IACF,uBAAO,GAAP,UAAQ,QAAY;QAChB,KAAK,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC;YACnC,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;YAC7B,QAAQ,CAAC,GAAG,EAAC,IAAI,CAAC,GAAG,CAAC,EAAC,GAAG,EAAC,GAAG,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC,CAAC,CAAA;SACjD;IACL,CAAC;IACL,YAAC;AAAD,CAAC,AAvDD,IAuDC;AAGD,eAAe,KAAK,CAAA\"}","code":"import { serialize, deserialize } from './helps';\r\nvar Store = /** @class */ (function () {\r\n    function Store(type) {\r\n        if (type === void 0) { type = 'localStorage'; }\r\n        this.storage = window[type];\r\n    }\r\n    // 设置storage\r\n    Store.prototype.set = function (config) {\r\n        var _a = config.key, key = _a === void 0 ? null : _a, _b = config.value, value = _b === void 0 ? undefined : _b;\r\n        if (!key)\r\n            return null;\r\n        if (value === undefined) {\r\n            this.remove(config);\r\n        }\r\n        this.storage.setItem(key, serialize(value));\r\n        return value;\r\n    };\r\n    // 获取storage\r\n    Store.prototype.get = function (config) {\r\n        var _a = config.key, key = _a === void 0 ? null : _a;\r\n        if (!key)\r\n            return undefined;\r\n        var val = deserialize(this.storage.getItem(key));\r\n        return (val === undefined || val === null ? undefined : val);\r\n    };\r\n    // 是否存在这个key\r\n    Store.prototype.has = function (config) {\r\n        return this.get(config) !== undefined;\r\n    };\r\n    // 移除这个key\r\n    Store.prototype.remove = function (config) {\r\n        var _a = config.key, key = _a === void 0 ? null : _a;\r\n        this.storage.removeItem(key);\r\n    };\r\n    // 清除storage\r\n    Store.prototype.clear = function (config) {\r\n        this.storage.clear();\r\n    };\r\n    // 获取所有的storage\r\n    Store.prototype.getAll = function (config) {\r\n        var ret;\r\n        ret = {};\r\n        this.forEach(function (key, val) {\r\n            ret[key] = val;\r\n        });\r\n        return ret;\r\n    };\r\n    // 遍历\r\n    Store.prototype.forEach = function (callback) {\r\n        for (var i = 0; i < this.storage.length; i++) {\r\n            var key = this.storage.key(i);\r\n            callback(key, this.get({ key: key, method: 'get' }));\r\n        }\r\n    };\r\n    return Store;\r\n}());\r\nexport default Store;\r\n//# sourceMappingURL=Store.js.map","dts":{"name":"/Users/way/Desktop/b-storage/dist/types/Store.d.ts","writeByteOrderMark":false,"text":"import { StorageType, StoreConfig } from './types';\r\ndeclare class Store {\r\n    storage: any;\r\n    constructor(type?: StorageType);\r\n    set(config: StoreConfig): any;\r\n    get(config: StoreConfig): any;\r\n    has(config: StoreConfig): boolean;\r\n    remove(config: StoreConfig): void;\r\n    clear(config: StoreConfig): void;\r\n    getAll(config: StoreConfig): object;\r\n    forEach(callback: any): void;\r\n}\r\nexport default Store;\r\n"}}
